{"version":3,"file":"styles/main.css","mappings":";AAMA,2ZAaC,SACA,UACA,SACA,eACA,aACA,wBAID,8EAEC,cAGD,KACC,cAGD,MAEC,gBAGD,aAEC,YAGD,oDAIC,WACA,aAGD,MACC,yBACA,iBAID,KACE,sBAGF,mBAGE,mBAIF,KACE,uBAGF,UAEE,YAGF,KACE,6BACA,mCACA,kCAIF,IACE,eACA,YACA,cAIF,GACE,kBASF,6BAIE,aACA,cAIF,OACE,YACA,gBACA,UACA,eAEA,+BAEE,aAGF,kBACE,wBACA,0CC/HJ,WACE,iCACA,mHAEA,mBACA,kBAGF,WACE,wBACA,2DACA,mBACA,kBCVF,YAEE,iBACA,gBACA,aACA,sBACA,mBACA,uBACA,kBCsKA,4BD9KF,YAWI,eAGF,mBACE,6BAEA,gBACA,gBAGF,kBACE,0BACA,gBCuJF,4BDzJA,kBAKI,iBCoJJ,6BDzJA,kBASI,iBAKN,SACE,qBAEA,wBAEA,YAEA,wBAGA,gBAEA,WACA,gBAEA,qLAGE,CAGF,2BACA,2BACA,gBCoHA,4BD3IF,SA6BI,cC8GF,6BD3IF,SAkCI,SACA,cAGF,gBACE,kCACA,uBAGF,YACE,gBAEA,kBACA,gBACA,iBACA,oBAGF,gBACE,aACA,+BACA,gBAGF,eACE,cAGF,wCAEE,iBACA,sBAGF,qBACE,iBAGF,qBACE,gCACA,gBACA,eAGF,sCAEE,gBACA,kBEpHJ,OACE,oBACA,eACA,MACA,SACA,OACA,QACA,WDuKA,4BC9KF,OAUI,QACA,YAGF,aACE,kBACA,sCACA,wBACA,gCACA,8BAEA,iBACE,WACA,YACA,mBAEA,yBACA,kBAEA,qDACA,mCACA,sDACA,+EAEA,kCAEA,iBACE,GACE,uDAEF,GACE,sHAEF,GACE,sHAEF,GACE,qHAEF,GACE,uHAEF,IACE,qHAEF,IACE,sHAEF,IACE,qHAEF,IACE,sHAEF,IACE,qHAEF,IACE,sHAEF,KACE,wDAKN,oBACE,wDACA,YAGF,kBACE,UACA,2CAGF,0BACE,sBAEF,0BACE,sBAEF,0BACE,qBAEF,0BACE,sBAEF,0BACE,sBAEF,0BACE,sBAEF,0BACE,sBAEF,0BACE,sBDkEJ,+BC9DI,0BACE,mBACA,QACA,QACA,WACA,YAEF,0BACE,kBACA,SACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,kBACA,QACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,iBACA,SACA,QACA,WACA,aDQN,8BCHI,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,kBACA,SACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,kBACA,SACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,mBACA,SACA,QACA,WACA,YAEF,0BACE,iBACA,SACA,QACA,WACA,aCnOR,SACE,wCACA,+BACA,oMACE,CAoBF,+BAEA,eACE,qCACA,+BAIF,iBACE,qCACA,+BAIF,eACE,qCACA,+BAIF,mBACE,4CACE,UAGF,oCACE,YC1CN,MACE,gDACA,4BACA,gCACA,6BACA,6BAGF,EACE,0BACA,oBAGF,KACE,+BACA,+BACA,0CACA,kBACA,yBACA,iBACA,0DAGF,KACE,eACA,MACA,OACA,QACA,SACA,aACA,gBACA,uBACA,gBACA,YAGF,GACE,sCACA,oBACA,eACA,kBAGF,YACE,kBACA,MACA,OACA,QACA,SAGF,SACE,kBACA,YACA,kBACA,yBACA,iBACA,uBH+GA,4BGrHF,SASI,iBAIJ,SACE,kCAGA,gBAEA,yBAEA,eACA,OACA,QACA,WAEA,gBAEA,cACE,MAGF,iBACE,SAIJ,IACE,eAGF,EACE,+BACA,qBAGF,YACE,kBACA,UACA,SACA,WACA,YACA,gCACA,mBHgEA,6BGvEF,YAUI,cAIJ,uCACE,EACE,G","sources":["webpack://seeAlso/./src/styles/inc/_reset.scss","webpack://seeAlso/./src/styles/inc/_fonts.scss","webpack://seeAlso/./src/styles/inc/_layout.scss","webpack://seeAlso/./node_modules/sass-mq/_mq.scss","webpack://seeAlso/./src/styles/inc/_objects.scss","webpack://seeAlso/./src/styles/inc/_flicker.scss","webpack://seeAlso/./src/styles/main.scss"],"sourcesContent":["/* stylelint-disable */\n/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\n\nbody {\n\tline-height: 1;\n}\n\nol,\nul {\n\tlist-style: none;\n}\n\nblockquote,\nq {\n\tquotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n\tcontent: '';\n\tcontent: none;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* Box sizing rules */\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\n/* Set core body defaults */\nhtml {\n  scroll-behavior: smooth;\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  text-rendering: optimizeSpeed;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Make images easier to work with */\nimg {\n  max-width: 100%;\n  height: auto;\n  display: block;\n}\n\n/* Italic font style */\nem {\n  font-style: italic;\n}\n\n/* Natural flow and rhythm in articles by default */\n// main *:not(br) + *:not(br) {\n//   margin-top: calc(var(--line-height) * 1em);\n// }\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n  color: inherit;\n}\n\n/* Reset buttons */\nbutton {\n  border: none;\n  background: none;\n  padding: 0;\n  cursor: pointer;\n\n  &:focus,\n  span:focus {\n    outline: none;\n  }\n\n  &:focus > span {\n    outline: dotted #000 1px;\n    outline: -webkit-focus-ring-color auto 1px;\n  }\n}\n","@font-face {\n  font-family: 'Terminal Grotesque';\n  src: url('../fonts/terminal-grotesque/terminal-grotesque.woff2') format('woff2'),\n       url('../fonts/terminal-grotesque/terminal-grotesque.woff') format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'ModeSeven';\n  src: url('../fonts/ModeSeven/ModeSeven.woff') format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Allan:wght@400&display=swap');\n","@use \"mq\";\n\n.large-text {\n  //font-size: 6.25em;\n  font-size: 6.62vw;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n\n  @include mq.mq($until: 690px) {\n    font-size: 7vw;\n  }\n\n  &__title {\n    font-family: Arial, sans-serif;\n    // text-transform: uppercase;\n    font-size: 1.9em;\n    line-height: 0.95;\n  }\n\n  &__from {\n    font-family: \"Allan\", serif;\n    margin-top: 0.9em;\n\n    @include mq.mq($until: 690px) {\n      font-size: 1.2em;\n    }\n\n    @include mq.mq($from: 691px) {\n      font-size: 0.85em;\n    }\n  }\n}\n\n.message {\n  --color--bg: #D5D5D5;\n\n  font-family: 'ModeSeven';\n\n  z-index: 250;\n\n  transform: rotate(-6deg);\n\n  // font-size: 1.4em;\n  font-size: 1.1em;\n  // width: 17em;\n  width: 20em;\n  overflow: hidden;\n\n  background: \n    // linear-gradient(135deg, transparent 0.355em, var(--color--bg) 0.355625em) top left, \n    // linear-gradient(45deg, var(--color--bg) 0.175em, transparent 0.175625em) top left,\n    linear-gradient(135deg, var(--color--bg) 0.175em, transparent 0.175625em) bottom left, \n    linear-gradient(45deg, transparent 0.355em, var(--color--bg) 0.355625em) bottom left,\n  ;\n  background-repeat: repeat-x;\n  background-size: 0.5em 0.25em;\n  padding: 0.25em 0;\n\n  //top: calc(100% - 7em);\n\n  @include mq.mq($until: 690px) {\n    // bottom: -31.3em;\n    bottom: -29em;\n\n  }\n\n  @include mq.mq($from: 691px) {\n    left: 15%;\n    bottom: -28em;\n  }\n\n  &__inner {\n    background-color: var(--color--bg);\n    padding: 0.3em 0.78em 1em;\n  }\n\n  h2 {\n    font-size: 2.4em;\n    // text-transform: uppercase;\n    text-align: center;\n    line-height: 1.1;\n    margin-top: 0.75em;\n    margin-bottom: 0.75em;\n  }\n\n  .table {\n    display: grid;\n    grid-template-columns: 1fr auto;\n    column-gap: 0.8em;\n  }\n\n  &__body {\n    max-width: 80%;\n  }\n\n  .datetime,\n  .top-credit {\n    font-size: 1.08em;\n    min-width: max-content;\n  }\n\n  .top-credit {\n    text-align: right;\n  }\n\n  .mid-credit {\n    grid-template-columns: 0.75fr 1fr;\n    font-size: 0.86em;\n    font-size: 0.8em;\n  }\n\n  .bottom-credit, \n  .end {\n    font-size: 0.87em;\n    text-align: center;\n  }\n}\n","@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$breakpoints: (\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px,\n) !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   @use 'path/to/mq' with ($show-breakpoints: ('mobile', 'tablet', 'desktop'));\n///\n///\n/// @type map\n$show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and â€¦`)\n///\n/// If you want to overried the media type, you can use this option.\n/// @example scss\n///   @use 'path/to/mq' with ($media-type: 'screen');\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example\n$media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n///\n/// @example scss\n///  $font-size-in-ems: px2em(16px);\n///  p { font-size: px2em(16px); }\n///\n/// @returns {Number}\n\n@function px2em($px) {\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n  // if $px is compatible with em units, then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $breakpoints\n///\n/// @example scss\n///  $tablet-width: get-breakpoint-width(tablet);\n///  @media (min-width: get-breakpoint-width(tablet)) {}\n///\n/// @requires {Variable} $breakpoints\n///\n/// @returns {Number} Value in pixels\n@function get-breakpoint-width($name, $breakpoints: $breakpoints) {\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $breakpoints\n/// @param {String | Boolean} $until [false] - One of $breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$media-type] - Media type: screen, printâ€¦\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$breakpoints]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $media-type\n/// @requires {Variable} $breakpoints\n/// @requires {function} px2em\n/// @requires {function} get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  @use 'path/to/mq' as *;\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $media-type,\n  $breakpoints: $breakpoints\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: '#{$media-query} and (min-width: #{$min-width})';\n  }\n  @if $max-width != 0 {\n    $media-query: '#{$media-query} and (max-width: #{$max-width})';\n  }\n  @if $and {\n    $media-query: '#{$media-query} and #{$and}';\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == 'all' and $media-query != '') {\n    $media-type: '';\n    $media-query: str-slice(unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: list.append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: list.append($less, $item);\n      } @else if ($item > $seed) {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value,\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $breakpoints\n///\n/// @example scss\n///  @include add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin add-breakpoint($name, $width) {\n  $new-breakpoint: (\n    $name: $width,\n  );\n  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;\n  $breakpoints: _map-sort-by-value($breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $breakpoints\n/// @requires {Variable} $show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin show-breakpoints(\n  $show-breakpoints: $show-breakpoints,\n  $breakpoints: $breakpoints\n) {\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: '#{$show-breakpoint} â‰¥ #{$width} (#{px2em($width)})';\n      }\n    }\n  }\n}\n\n@if list.length($show-breakpoints) > 0 {\n  @include show-breakpoints;\n}\n","@use \"mq\";\n\n.notes {\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 50;\n\n  @include mq.mq($until: 690px) {\n    top: 5vh;\n    bottom: 7vh;\n  }\n\n  &__item {\n    position: absolute;\n    transition-property: transform, opacity;\n    transition-duration: 0.2s;\n    transform: translate(-50%, -50%);\n    will-change: transform, opacity;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: contain;\n\n      --animation-duration: 20;\n      --multiplier: 0.1;\n\n      animation: shake cubic-bezier(0.36, 0.07, 0.19, 0.97);\n      animation-iteration-count: infinite;\n      animation-duration: calc(var(--animation-duration) * 1s);\n      animation-delay: calc(var(--animation-delay) / 100 * var(--animation-duration) * -1s);\n\n      transform: rotate(var(--rotation));\n\n      @keyframes shake {\n        0% {\n          transform: translate3d(0, 0, 0) rotate(var(--rotation));\n        }\n        2% {\n          transform: translate3d(calc(var(--multiplier) * 1.65em), calc(var(--multiplier) * -1.53em), 0) rotate(var(--rotation));\n        }\n        4% {\n          transform: translate3d(calc(var(--multiplier) * 0.22em), calc(var(--multiplier) * -1.01em), 0) rotate(var(--rotation));\n        }\n        6% {\n          transform: translate3d(calc(var(--multiplier) * 1.15em), calc(var(--multiplier) * 1.15em), 0) rotate(var(--rotation));\n        }\n        8% {\n          transform: translate3d(calc(var(--multiplier) * -1.77em), calc(var(--multiplier) * -0.44em), 0) rotate(var(--rotation));\n        }\n        10% {\n          transform: translate3d(calc(var(--multiplier) * 1.54em), calc(var(--multiplier) * 1.62em), 0) rotate(var(--rotation));\n        }\n        12% {\n          transform: translate3d(calc(var(--multiplier) * 1.38em), calc(var(--multiplier) * -0.77em), 0) rotate(var(--rotation));\n        }\n        14% {\n          transform: translate3d(calc(var(--multiplier) * 1.75em), calc(var(--multiplier) * 1.18em), 0) rotate(var(--rotation));\n        }\n        16% {\n          transform: translate3d(calc(var(--multiplier) * -0.94em), calc(var(--multiplier) * -1.90em), 0) rotate(var(--rotation));\n        }\n        18% {\n          transform: translate3d(calc(var(--multiplier) * 1.70em), calc(var(--multiplier) * -0.37em), 0) rotate(var(--rotation));\n        }\n        20% {\n          transform: translate3d(calc(var(--multiplier) * -1.64em), calc(var(--multiplier) * 0.66em), 0) rotate(var(--rotation));\n        }\n        100% {\n          transform: translate3d(0, 0, 0) rotate(var(--rotation));\n        }\n      }\n    }\n\n    &.active {\n      transform: translate(-50%, -50%) scale(1.5) rotate(9deg);\n      z-index: 200;\n    }\n\n    &.init {\n      opacity: 0;\n      transform: translate(-50%, -50%) scale(0.5);\n    }\n\n    &:nth-child(1) {\n      --animation-delay: 87;\n    }\n    &:nth-child(2) {\n      --animation-delay: 25;\n    }\n    &:nth-child(3) {\n      --animation-delay: 6;\n    }\n    &:nth-child(4) {\n      --animation-delay: 73;\n    }\n    &:nth-child(5) {\n      --animation-delay: 50;\n    }\n    &:nth-child(6) {\n      --animation-delay: 64;\n    }\n    &:nth-child(7) {\n      --animation-delay: 90;\n    }\n    &:nth-child(8) {\n      --animation-delay: 19;\n    }\n\n    @include mq.mq($and: \"(orientation: landscape)\") {\n      &:nth-child(3) {\n        --rotation: -27deg;\n        left: 6%;\n        top: 18%;\n        width: 25vw;\n        height: 25vw;\n      }\n      &:nth-child(5) {\n        --rotation: 19deg;\n        left: 53%;\n        top: 20%;\n        width: 31vw;\n        height: 31vw;\n      }\n      &:nth-child(1) {\n        --rotation: -28deg;\n        left: 87%;\n        top: 23%;\n        width: 21vw;\n        height: 21vw;\n      }\n      &:nth-child(8) {\n        --rotation: -14deg;\n        left: 22%;\n        top: 48%;\n        width: 28vw;\n        height: 28vw;\n      }\n      &:nth-child(2) {\n        --rotation: 16deg;\n        left: 9%;\n        top: 85%;\n        width: 18vw;\n        height: 18vw;\n      }\n      &:nth-child(6) {\n        --rotation: -14deg;\n        left: 40%;\n        top: 86%;\n        width: 22vw;\n        height: 22vw;\n      }\n      &:nth-child(7) {\n        --rotation: -12deg;\n        left: 64%;\n        top: 65%;\n        width: 25vw;\n        height: 25vw;\n      }\n      &:nth-child(4) {\n        --rotation: 9deg;\n        left: 92%;\n        top: 80%;\n        width: 30vw;\n        height: 30vw;\n      }\n    }\n\n    @include mq.mq($and: \"(orientation: portrait)\") {\n      &:nth-child(1) {\n        --rotation: -27deg;\n        left: 21%;\n        top: 13%;\n        width: 22vh;\n        height: 22vh;\n      }\n      &:nth-child(5) {\n        --rotation: 19deg;\n        left: 79%;\n        top: 17%;\n        width: 29vh;\n        height: 29vh;\n      }\n      &:nth-child(3) {\n        --rotation: -28deg;\n        left: 36%;\n        top: 35%;\n        width: 25vh;\n        height: 25vh;\n      }\n      &:nth-child(8) {\n        --rotation: -14deg;\n        left: 90%;\n        top: 46%;\n        width: 26vh;\n        height: 26vh;\n      }\n      &:nth-child(2) {\n        --rotation: 16deg;\n        left: 24%;\n        top: 58%;\n        width: 17vh;\n        height: 17vh;\n      }\n      &:nth-child(6) {\n        --rotation: -14deg;\n        left: 67%;\n        top: 71%;\n        width: 20vh;\n        height: 20vh;\n      }\n      &:nth-child(7) {\n        --rotation: -12deg;\n        left: 19%;\n        top: 84%;\n        width: 31vh;\n        height: 31vh;\n      }\n      &:nth-child(4) {\n        --rotation: 9deg;\n        left: 83%;\n        top: 94%;\n        width: 26vh;\n        height: 26vh;\n      }\n    }\n  }\n}\n",".flicker {\n  --color--shadow: rgba(172, 34, 25, 0.7);\n  color: var(--color--foreground);\n  text-shadow: \n    1px 0px 4px var(--color--foreground), \n    2px 0px 4px var(--color--foreground), \n    // 3px 0px 4px var(--color--foreground), \n    // 2px 0px 3px var(--color--foreground), \n    // 2px 3px 0.11em var(--color--foreground), \n    2px 0px 0.11em, 5px 0px 0.96em, \n    0.15em 0vw 1.54em var(--color--foreground), \n    0.3em 0vw 1.54em var(--color--foreground),\n  ;\n  // filter: \n  //   drop-shadow(0.005em 0 0.01em var(--color--shadow))\n  //   drop-shadow(0.01em 0 0.01em var(--color--foreground))\n  //   // // drop-shadow(3px 0px 2px var(--color--shadow))\n  //   // // drop-shadow(2px 0px 1.5px var(--color--shadow))\n  //   // // drop-shadow(2px 3px 0.055em var(--color--shadow))\n  //   // drop-shadow(2px 0px 0.055em)\n  //   drop-shadow(0 0 0.05em var(--color--shadow))\n  //   drop-shadow(0.05em 0 0.2em var(--color--shadow))\n  //   drop-shadow(0.1em 0 0.4em var(--color--shadow))\n  // ;\n  transform: translate3d(0,0,0);\n\n  &__slow {\n    animation: flicker 4s linear infinite;\n    transform: translate3d(0,0,0);\n    // will-change: opacity;\n  }\n\n  &__medium {\n    animation: flicker 2s linear infinite;\n    transform: translate3d(0,0,0);\n    // will-change: opacity;\n  }\n\n  &__fast {\n    animation: flicker 1s linear infinite;\n    transform: translate3d(0,0,0);\n    // will-change: opacity;\n  }\n\n  @keyframes flicker {\n    0%, 19.999%, 22%, 62.999%, 64%, 64.999%, 70%, 100% {\n      opacity: 1;\n      \n    }\n    20%, 21.999%, 63%, 63.999%, 65%, 69.999% {\n      opacity: 0.3;\n    }\n  }\n}\n","@use \"inc/reset\";\n\n@use \"mq\";\n@use \"inc/fonts\";\n@use \"inc/layout\";\n@use \"inc/objects\";\n@use \"inc/flicker\";\n\n:root {\n  --font-family: 'Terminal Grotesque', sans-serif;\n  --font-family--serif: serif;\n  --font-family--sans: sans-serif;\n  --color--foreground: #ac2219;\n  --color--background: #F0ECEC;\n}\n\n* {\n  touch-action: manipulation;\n  pointer-events: none;\n}\n\nbody {\n  font-family: var(--font-family);\n  color: var(--color--foreground);\n  background-color: var(--color--background);\n  touch-action: none;\n  -webkit-user-select: none;\n  user-select: none;\n  cursor: url('../images/cursor.svg') 64 64, auto;\n}\n\nmain {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: end;\n  justify-content: center;\n  overflow: hidden;\n  z-index: 100;\n}\n\nhr {\n  border-color: var(--color--foreground);\n  border-style: dashed;\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n\n.large-text {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n.message {\n  position: relative;\n  cursor: grab;\n  touch-action: none;\n  -webkit-user-select: none;\n  user-select: none;\n  pointer-events: initial;\n\n  @include mq.mq($until: 690px) {\n    font-size: 3.6vw;\n  }\n}\n\n.marquee {\n  font-family: \"ModeSeven\", monospace;\n\n  // font-size: 0.78em;\n  font-size: 1.1em;\n  // font-size: 1.56em;\n  text-transform: uppercase;\n\n  position: fixed;\n  left: 0;\n  right: 0;\n  z-index: 50;\n\n  padding: 0.05em 0;\n  \n  &--top {\n    top: 0;\n  }\n\n  &--bottom {\n    bottom: 0;\n  }\n}\n\np + p {\n  margin-top: 1em;\n}\n\na {\n  color: var(--color--foreground);\n  text-decoration: none;\n}\n\n.click-icon {\n  position: absolute;\n  left: 15vw;\n  top: 65vh;\n  width: 26vw;\n  height: 26vw;\n  transform: translate(-50%, -50%);\n  object-fit: contain;\n\n  @include mq.mq($from: 691px) {\n    display: none;\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation: none !important;\n  }\n}\n"],"names":[],"sourceRoot":""}