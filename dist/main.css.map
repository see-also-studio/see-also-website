{"version":3,"file":"main.css","mappings":"AAAA,2ZAaC,SACA,UACA,SACA,eACA,aACA,wBAID,8EAEC,cAGD,KACC,cAGD,MACC,gBAGD,aACC,YAGD,oDAEC,WACA,aAGD,MACC,yBACA,iBAQD,IACE,eACA,YAGF,EACC,sBC7DD,MACE,6BACA,6BAEA,2BACA,oBAEA,mBCLA,WACE,2BACA,2DAEA,gBACA,kBAIF,MACE,8BAGJ,QACE,iBACA,kBACA,kBACA,gBACA,gBACA,UAEA,UAEF,iCACE,sBAEF,gBACE,kBACA,WACA,YACA,UACA,aACA,8BACA,uBAEF,8CAEE,iCAEF,uBACE,mBACA,uCACE,mBAGJ,cACE,cACA,WACA,YACA,kBACA,8BAEF,8BACE,kBAIA,oDAEE,YAGF,mCACE,uBACA,qCAGJ,sCACE,wBACA,2BAIA,sDAEE,mBAEF,yQAQE,4BAEF,sLAKE,kBACA,OACA,MACA,WACA,YACA,oBACA,WAEF,gCACE,2BAEF,qCACE,gFAEF,sCACE,iFAEF,oCACE,+EAEF,uCACE,kFAMF,iCACE,cACA,qBACA,wBACA,oDACE,aAGJ,+CACE,8BAIF,mDACE,6BAIF,iDACE,6BAIF,yCACE,WACA,cACA,WAGA,6EACE,yDAEF,2DACE,YACA,0CAIF,2EACE,wDAEF,yDACE,WACA,2CAIJ,+CACE,gCCvKA,4CACE,oCAGJ,2BACE,oBACA,4BACA,yCACE,oBAIF,yFAEE,oBCdJ,MACE,+BAMJ,wCAEE,kBACA,QACA,gDACA,qCACA,uDACA,WACA,eACA,aACA,mBACA,uBACA,gEACA,sFACE,YACA,YACA,oBAEF,oDACE,yBACA,wCACA,+BACA,iBACA,oBACA,qBACA,cAGJ,oDAKE,UACA,WAJA,gEACE,eAKJ,oDAKE,WACA,UAJA,gEACE,eAMJ,oBACE,aCtDA,gBACE,gBAGF,kBACE,qBAGF,eACE,YAGF,aACE,WCZJ,UAEE,YACA,SAGF,EACE,cACA,SACA,UACA,mBAGF,KACE,uBACA,eACA,+BACA,+BACA,oCAGF,EACE,cAEA,cACE,qBAIJ,KACE,aACA,cACA,gBACA,6BACA,gBACA,2BACA,sBAEA,uCACA,0BCuIA,uCDjJF,KAaI,wCACA,4BCmIF,uCDjJF,KAkBI,gCACA,0CAIJ,QACE,kBACA,iCCwHA,uCD1HF,QAKI,gBACA,mBCoHF,uCD1HF,QAUI,mBAGF,gBACE,kCACA,kBACA,OACA,MACA,8BACA,UAKF,gBACE,kBACA,kCACA,yBACA,UAOF,kCACE,kBAIA,kDACE,kBAMJ,aACE,eC0EF,uCDtEF,cAEI,aACA,iBCmEF,uCDtEF,cAOI,aACA,iBC8DF,uCD1DF,gBAEI,aACA,iBCuDF,uCD1DF,gBAOI,aACA,gBACA,8BCiDF,uCD7CF,iBAEI,aACA,iBC0CF,uCD7CF,iBAOI,aACA,gBACA,8BAIJ,gBACE,eC+BA,uCDhCF,gBAII,aACA,iBC2BF,uCDhCF,gBASI,aACA,gBACA,8BAIA,oCACE,wCAKN,aACE,eCUA,uCDXF,aAII,aACA,gBACA,gBACA,qBCIF,uCDXF,aAWI,aACA,iBAGF,eACE,kCAGF,qBACE,WAKF,0BACE,wCAKF,8BACE,wCAGF,iEACE,aAGF,0CACE,aACA,oBC9BF,uCD4BA,0CAKI,cCjCJ,uCD4BA,0CASI,aACA,iBAGF,4CACE,uBAGF,oHAEE,oBAMJ,6BACE,wCAOF,gEACE,aE5OA,gCACE,iBACA,0BAGF,kCACE,YAGF,iCACE,YAIJ,2DACE,kBACA,MACA,OACA,QACA,SACA,cAIJ,UACE,kBACA,YACA,WAEA,gBACE,YAEA,kBACA,kBACA,mBACA,2DACA,6DAEA,6BACE,aAGF,kBACE,cACA,WACA,YAIJ,cACE,YACA,WACA,mBAEA,0BACE,0BCvDF,oBACE,aAIJ,iBACE,aAIA,uBACE,aAIJ,eACE,aAEE,2CACE,aCrBR,SACE,aACA,UAII,mCACE,8pE","sources":["webpack://see-also-website/./src/styles/common/_reset.scss","webpack://see-also-website/./src/styles/common/_variables.scss","webpack://see-also-website/./node_modules/swiper/swiper.scss","webpack://see-also-website/./node_modules/swiper/modules/effect-fade/effect-fade.scss","webpack://see-also-website/./node_modules/swiper/modules/navigation/navigation.scss","webpack://see-also-website/./src/styles/components/_gallery.scss","webpack://see-also-website/./src/styles/common/_global.scss","webpack://see-also-website/./node_modules/sass-mq/_mq.scss","webpack://see-also-website/./src/styles/layouts/_projects.scss","webpack://see-also-website/./src/styles/layouts/_project.scss","webpack://see-also-website/./src/styles/layouts/_contact.scss"],"sourcesContent":["html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\n\nbody {\n\tline-height: 1;\n}\n\nol, ul {\n\tlist-style: none;\n}\n\nblockquote, q {\n\tquotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: \"\";\n\tcontent: none;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/**\n* Additional reset\n*\n*/\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n* {\n\tbox-sizing: border-box;\n}\n",":root {\n  --color--foreground: #191818;\n  --color--background: #E5E1D9;\n\n  --font-size--large: 1.25em;\n  --line-height: 1.11;\n\n  --page-margin: 1em;\n}\n","@import 'swiper-vars.scss';\n@at-root {\n  @font-face {\n    font-family: 'swiper-icons';\n    src: url('data:application/font-woff;charset=utf-8;base64, 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')\n      format('woff');\n    font-weight: 400;\n    font-style: normal;\n  }\n}\n@at-root {\n  :root {\n    --swiper-theme-color: #{$themeColor};\n  }\n}\n.swiper {\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  overflow: hidden;\n  list-style: none;\n  padding: 0;\n  /* Fix of Webkit flickering */\n  z-index: 1;\n}\n.swiper-vertical > .swiper-wrapper {\n  flex-direction: column;\n}\n.swiper-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  display: flex;\n  transition-property: transform;\n  box-sizing: content-box;\n}\n.swiper-android .swiper-slide,\n.swiper-wrapper {\n  transform: translate3d(0px, 0, 0);\n}\n.swiper-pointer-events {\n  touch-action: pan-y;\n  &.swiper-vertical {\n    touch-action: pan-x;\n  }\n}\n.swiper-slide {\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transition-property: transform;\n}\n.swiper-slide-invisible-blank {\n  visibility: hidden;\n}\n/* Auto Height */\n.swiper-autoheight {\n  &,\n  .swiper-slide {\n    height: auto;\n  }\n\n  .swiper-wrapper {\n    align-items: flex-start;\n    transition-property: transform, height;\n  }\n}\n.swiper-backface-hidden .swiper-slide {\n  transform: translateZ(0);\n  backface-visibility: hidden;\n}\n/* 3D Effects */\n.swiper-3d {\n  &,\n  &.swiper-css-mode .swiper-wrapper {\n    perspective: 1200px;\n  }\n  .swiper-wrapper,\n  .swiper-slide,\n  .swiper-slide-shadow,\n  .swiper-slide-shadow-left,\n  .swiper-slide-shadow-right,\n  .swiper-slide-shadow-top,\n  .swiper-slide-shadow-bottom,\n  .swiper-cube-shadow {\n    transform-style: preserve-3d;\n  }\n  .swiper-slide-shadow,\n  .swiper-slide-shadow-left,\n  .swiper-slide-shadow-right,\n  .swiper-slide-shadow-top,\n  .swiper-slide-shadow-bottom {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: 10;\n  }\n  .swiper-slide-shadow {\n    background: rgba(0, 0, 0, 0.15);\n  }\n  .swiper-slide-shadow-left {\n    background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n  }\n  .swiper-slide-shadow-right {\n    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n  }\n  .swiper-slide-shadow-top {\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n  }\n  .swiper-slide-shadow-bottom {\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n  }\n}\n\n/* CSS Mode */\n.swiper-css-mode {\n  > .swiper-wrapper {\n    overflow: auto;\n    scrollbar-width: none; /* For Firefox */\n    -ms-overflow-style: none; /* For Internet Explorer and Edge */\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n  > .swiper-wrapper > .swiper-slide {\n    scroll-snap-align: start start;\n  }\n}\n.swiper-horizontal.swiper-css-mode {\n  > .swiper-wrapper {\n    scroll-snap-type: x mandatory;\n  }\n}\n.swiper-vertical.swiper-css-mode {\n  > .swiper-wrapper {\n    scroll-snap-type: y mandatory;\n  }\n}\n.swiper-centered {\n  > .swiper-wrapper::before {\n    content: '';\n    flex-shrink: 0;\n    order: 9999;\n  }\n  &.swiper-horizontal {\n    > .swiper-wrapper > .swiper-slide:first-child {\n      margin-inline-start: var(--swiper-centered-offset-before);\n    }\n    > .swiper-wrapper::before {\n      height: 100%;\n      width: var(--swiper-centered-offset-after);\n    }\n  }\n  &.swiper-vertical {\n    > .swiper-wrapper > .swiper-slide:first-child {\n      margin-block-start: var(--swiper-centered-offset-before);\n    }\n    > .swiper-wrapper::before {\n      width: 100%;\n      height: var(--swiper-centered-offset-after);\n    }\n  }\n\n  > .swiper-wrapper > .swiper-slide {\n    scroll-snap-align: center center;\n  }\n}\n\n\n\n",".swiper-fade {\n  &.swiper-free-mode {\n    .swiper-slide {\n      transition-timing-function: ease-out;\n    }\n  }\n  .swiper-slide {\n    pointer-events: none;\n    transition-property: opacity;\n    .swiper-slide {\n      pointer-events: none;\n    }\n  }\n  .swiper-slide-active {\n    &,\n    & .swiper-slide-active {\n      pointer-events: auto;\n    }\n  }\n}\n","@import '../../swiper-vars.scss';\n@at-root {\n  :root {\n    --swiper-navigation-size: 44px;\n    /*\n  --swiper-navigation-color: var(--swiper-theme-color);\n  */\n  }\n}\n.swiper-button-prev,\n.swiper-button-next {\n  position: absolute;\n  top: 50%;\n  width: calc(var(--swiper-navigation-size) / 44 * 27);\n  height: var(--swiper-navigation-size);\n  margin-top: calc(0px - (var(--swiper-navigation-size) / 2));\n  z-index: 10;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--swiper-navigation-color, var(--swiper-theme-color));\n  &.swiper-button-disabled {\n    opacity: 0.35;\n    cursor: auto;\n    pointer-events: none;\n  }\n  &:after {\n    font-family: swiper-icons;\n    font-size: var(--swiper-navigation-size);\n    text-transform: none !important;\n    letter-spacing: 0;\n    text-transform: none;\n    font-variant: initial;\n    line-height: 1;\n  }\n}\n.swiper-button-prev,\n.swiper-rtl .swiper-button-next {\n  &:after {\n    content: 'prev';\n  }\n  left: 10px;\n  right: auto;\n}\n.swiper-button-next,\n.swiper-rtl .swiper-button-prev {\n  &:after {\n    content: 'next';\n  }\n  right: 10px;\n  left: auto;\n}\n\n.swiper-button-lock {\n  display: none;\n}\n",".gallery {\n  &__inner {\n    overflow: hidden;\n  }\n\n  &__wrapper {\n    align-items: flex-end;\n  }\n\n  &__item {\n    height: 100%;\n  }\n\n  img {\n    width: 100%;\n  }\n}\n","@use \"mq\";\n\nbody, \nhtml {\n  height: 100%;\n  margin: 0;\n}\n\n* {\n  font-size: 1em;\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n}\n\nbody {\n  font-family: sans-serif;\n  font-size: 125%;\n  line-height: var(--line-height);\n  color: var(--color--foreground);\n  background: var(--color--background);\n}\n\na {\n  color: inherit;\n\n  &:not(:hover) {\n    text-decoration: none;\n  }\n}\n\nmain {\n  display: grid;\n  row-gap: 0.75em;\n  column-gap: 10vw;\n  counter-reset: page-section 0;\n  min-height: 100%;\n  padding: var(--page-margin);\n  box-sizing: border-box;\n\n  transition-property: grid-template-rows;\n  transition-duration: 200ms;\n\n  @include mq.mq($until: small) {\n    grid-template-rows: 0fr 0fr auto 0fr 0fr;\n    grid-template-columns: 100%;\n  }\n\n  @include mq.mq($from: small) {\n    grid-template-rows: 0fr auto 0fr;\n    grid-template-columns: minmax(0, 3fr) 1fr; // Minmax fixes issue with swiper gallery not knowing column width\n  }\n}\n\nsection {\n  position: relative;  \n  counter-increment: page-section 1;\n\n  @include mq.mq($until: small) {\n    grid-column: 1 / 2;\n    padding-left: 38vw;\n  }\n\n  @include mq.mq($from: small) {\n    padding-left: 10vw;\n  }\n\n  &::before {\n    font-size: var(--font-size--large);\n    position: absolute;\n    left: 0;\n    top: 0;\n    content: counter(page-section);\n    z-index: 5;\n  }\n}\n\n.section {\n  &__title {\n    position: relative;\n    font-size: var(--font-size--large);\n    text-transform: uppercase;\n    z-index: 5;\n  }\n\n  &__content {\n\n  }\n\n  &__title + &__content {\n    padding-top: 0.75em;\n  }\n\n  &:not(#projects) {\n    .section__content-wrapper {\n      position: relative;\n    }\n  }\n}\n\n.content {\n  & > * + * {\n    margin-top: 1em;\n  }\n}\n\nsection#about {\n  @include mq.mq($until: small) {\n    grid-row: 1 / 2;\n    grid-column: 1 / 2;\n  }\n\n  @include mq.mq($from: small) {\n    grid-row: 1 / 2;\n    grid-column: 1 / 2;\n  }\n}\n\nsection#contact {\n  @include mq.mq($until: small) {\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n  }\n\n  @include mq.mq($from: small) {\n    grid-row: 1 / 2;\n    grid-column: 2 / 3;\n    counter-reset: page-section 3;\n  }\n}\n\nsection#projects {\n  @include mq.mq($until: small) {\n    grid-row: 3 / 4;\n    grid-column: 1 / 2;\n  }\n\n  @include mq.mq($from: small) {\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    counter-reset: page-section 1;\n  }\n}\n\nsection#content {\n  align-self: end;\n\n  @include mq.mq($until: small) {\n    grid-row: 4 / 5;\n    grid-column: 1 / 2;\n  }\n\n  @include mq.mq($from: small) {\n    grid-row: 3 / 4;\n    grid-column: 1 / 2;\n    counter-reset: page-section 2;\n  }\n\n  .section__content {\n    > * {\n      min-height: calc(var(--line-height) * 4em);\n    }\n  }\n}\n\nsection#time {\n  align-self: end;\n  \n  @include mq.mq($until: small) {\n    grid-row: 5 / 6;\n    grid-column: 1 / 2;\n    padding-top: 2em;\n    padding-bottom: 0.5em;\n  }\n\n  @include mq.mq($from: small) {\n    grid-row: 3 / 4;\n    grid-column: 2 / 3;\n  }\n\n  > * {\n    font-size: var(--font-size--large);\n  }\n\n  &::before {\n    content: \"\";\n  }\n}\n\nbody[data-view=\"home\"] {\n  main {\n    grid-template-rows: 0fr 0fr auto 0fr 0fr;\n  }\n}\n\nbody[data-view=\"projects\"] {\n  main {\n    grid-template-rows: 0fr 0fr auto 0fr 0fr;\n  }\n  \n  section#about .section__content-wrapper {\n    display: none;\n  }\n\n  section#projects {\n    grid-row: 3 / 5;\n    pointer-events: none;\n\n    @include mq.mq($until: small) {\n      grid-row: 3 / 5;\n    }\n  \n    @include mq.mq($from: small) {\n      grid-row: 2 / 4;\n      grid-column: 1 / 3;\n    }\n\n    * {\n      pointer-events: inherit;\n    }\n\n    .section__title, \n    .projects__item {\n      pointer-events: auto;\n    }\n  }\n}\n\nbody[data-view=\"project\"] {\n  main {\n    grid-template-rows: 0fr 0fr auto 0fr 0fr;\n  }\n\n  .widget {\n      //display: none;\n  }\n\n  section#about .section__content-wrapper {\n    display: none;\n  }\n}\n","@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$breakpoints: (\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px,\n) !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   @use 'path/to/mq' with ($show-breakpoints: ('mobile', 'tablet', 'desktop'));\n///\n///\n/// @type map\n$show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// If you want to overried the media type, you can use this option.\n/// @example scss\n///   @use 'path/to/mq' with ($media-type: 'screen');\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example\n$media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n///\n/// @example scss\n///  $font-size-in-ems: px2em(16px);\n///  p { font-size: px2em(16px); }\n///\n/// @returns {Number}\n\n@function px2em($px) {\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n  // if $px is compatible with em units, then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $breakpoints\n///\n/// @example scss\n///  $tablet-width: get-breakpoint-width(tablet);\n///  @media (min-width: get-breakpoint-width(tablet)) {}\n///\n/// @requires {Variable} $breakpoints\n///\n/// @returns {Number} Value in pixels\n@function get-breakpoint-width($name, $breakpoints: $breakpoints) {\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $breakpoints\n/// @param {String | Boolean} $until [false] - One of $breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$breakpoints]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $media-type\n/// @requires {Variable} $breakpoints\n/// @requires {function} px2em\n/// @requires {function} get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  @use 'path/to/mq' as *;\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $media-type,\n  $breakpoints: $breakpoints\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: '#{$media-query} and (min-width: #{$min-width})';\n  }\n  @if $max-width != 0 {\n    $media-query: '#{$media-query} and (max-width: #{$max-width})';\n  }\n  @if $and {\n    $media-query: '#{$media-query} and #{$and}';\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == 'all' and $media-query != '') {\n    $media-type: '';\n    $media-query: str-slice(unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: list.append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: list.append($less, $item);\n      } @else if ($item > $seed) {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value,\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $breakpoints\n///\n/// @example scss\n///  @include add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin add-breakpoint($name, $width) {\n  $new-breakpoint: (\n    $name: $width,\n  );\n  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;\n  $breakpoints: _map-sort-by-value($breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $breakpoints\n/// @requires {Variable} $show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin show-breakpoints(\n  $show-breakpoints: $show-breakpoints,\n  $breakpoints: $breakpoints\n) {\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: '#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})';\n      }\n    }\n  }\n}\n\n@if list.length($show-breakpoints) > 0 {\n  @include show-breakpoints;\n}\n","#projects {\n  .section__title {\n    &:hover {\n      filter: invert(1);\n      mix-blend-mode: difference;\n    }\n\n    &::before {\n      content: \"(\";\n    }\n\n    &::after {\n      content: \")\";\n    }\n  }\n\n  .section__content[data-barba-namespace=\"projects\"] {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding-top: 0;\n  }\n}\n\n.projects {\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  &__item {\n    --size: 5em;\n\n    position: absolute;\n    width: var(--size);\n    height: var(--size);\n    top: max(calc(0 * var(--size)), calc(((100% - var(--size))/ 100) * var(--top)));\n    left: max(calc(0 * var(--size)), calc(((100% - var(--size))/ 100) * var(--left)));\n\n    &:not([style]) {\n      display: none;\n    }\n\n    > a {\n      display: block;\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: contain;\n\n    &:not(:hover) {\n      mix-blend-mode: luminosity;\n    }\n  }\n}\n",".project {\n  &__content {\n    > * {\n      margin-top: 0;\n    }\n  }\n  \n  &__header {\n    display: flex;\n  }\n\n  &__date {\n    &::before {\n      content: \", \";\n    }\n  }\n\n  &__tags {\n    display: flex;\n    > *:not(:first-child) {\n      &::before {\n        content: \", \"\n      }\n    }\n  }\n}\n","#contact {\n  display: flex;\n  gap: 0.35em; \n\n  > * {\n    &:not(:last-child) {\n      &::after {\n        content: \", \";\n      }\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}